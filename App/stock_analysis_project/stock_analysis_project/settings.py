"""
Django settings for stock_analysis_project project.

Generated by 'django-admin startproject' using Django 3.1b1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""
import os
from pathlib import Path
from celery.schedules import crontab   
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/dev/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2j!0q_j%j(!%5#-e#-z#^g+a#vnbs(fx(pe2vt-#zzdl!6c6hg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
#DEBUG = False
ALLOWED_HOSTS = ["127.0.0.1","*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'django_extensions',
    #'debug_toolbar',
    'import_export', # from pip, init companies data
    'crispy_forms',

    'rest_framework',
	'rest_framework.authtoken',

    'webpack_loader',	# pip install django-webpack-loader
    
    'Main_app.apps.MainAppConfig',
    'OBVapp.apps.ObvappConfig',
    'django_celery_results',
    'django_celery_beat',

]

MIDDLEWARE = [
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'
]

ROOT_URLCONF = 'stock_analysis_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'stock_analysis_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/dev/ref/settings/#databases

#for docker
DATABASES = { 
   'default': {
       'ENGINE': 'django.db.backends.mysql',
       'OPTIONS': {
        'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            },
       'NAME': 'stock_analysis_project',   #Name of database you created
       'USER': 'root',        #Username of database you created
       'PASSWORD':'pick_a_good_password',         #Password of database you created
       'HOST': 'db',
       'PORT': '3306',
    } }


# # for local
# DATABASES = {
#     'default': {
#         #'ENGINE': 'mysql.connector.django',
#         'ENGINE': 'django.db.backends.mysql',
#         'USER': 'user',
#         'USER': 'root',
#         #'PASSWORD': 'pick_a_good_password',
#         'PASSWORD': '',
#         #'HOST': 'stock_analysis_project',#'127.0.0.1',   # Or an IP Address that your DB is hosted on
#         'PORT': '3306',
#         'NAME': 'stock_analysis_project',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/dev/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/dev/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/dev/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media')
MEDIA_URL='/media/'


PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')

INTERNAL_IPS = [
    # dor debug toolbar
    '127.0.0.1',
    # ...
]


#https://medium.com/@ksarthak4ever/django-handling-periodic-tasks-with-celery-daaa2a146f14
CELERY_BEAT_SCHEDULE = {
    "celery_task_updating_stockdaydata": {
        "task": "Main_app.tasks.celery_task_updating_stockdaydata",
        "schedule": crontab(minute=0,hour="*/4"),
    }                       
}


# >>> crontab(hour='*/1')
# <crontab: * */1 * * * (m/h/d/dM/MY)>

# What you want is crontab(minute=0, hour='*/1')


#https://testdriven.io/blog/django-celery-periodic-tasks/

# in  docker 
rabbitmq_url = 'amqp://admin:mypass@broker:5672'
CELERY_BROKER_URL = rabbitmq_url

# # local development
# CELERY_BROKER_URL = 'amqp://localhost'


CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
CELERY_ENABLE_UTC = False
CELERY_TIMEZONE = 'Asia/Jerusalem'

CRISPY_TEMPLATE_PACK = "bootstrap4"
# django.contrib.sites
SITE_ID=1

# Django-REST-Framework

REST_FRAMEWORK = {

    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework.authentication.TokenAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ),

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),

    # 'DEFAULT_RENDERER_CLASSES': [
    #     'rest_framework.renderers.JSONRenderer',
    #     'rest_framework.renderers.BrowsableAPIRenderer',
    # ],

    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 12 # 10 could be a good value to assign in production. Remember: this currently also applies to answers

}


WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'dist/',
        'STATS_FILE': os.path.join(BASE_DIR, 'frontend', 'webpack-stats.json'),
    }
}